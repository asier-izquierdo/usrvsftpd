#!/bin/bash

function checkdep {
   if [[ $($1 -qa | grep $2) ]]
	then echo "El paquete '$2' ya está instalado, saltando al siguiente paso"
	else
	   case $1 in
		rpm)
		   dnf install $2 -y
		   ;;
		dpkg)
		   apt-get install $2 -y
		   ;;
	   esac
   fi
}

function vsftpdconf {
   if [[ $(test -d $1/vsftpf.conf.backup) ]]
	then
	   echo "Realizando copia de seguridad para el fichero '$1/vsftpd.conf' en '$1/vsftpd.conf.backup' antes de modificarlo..."
	   cp $1/vsftpd.conf $1/vsftpd.conf.backup
   fi
   echo "Modificando el fichero $1/vsftpd.conf..."
    rm $1/vsftpd.conf
    echo "listen=YES" > $1/vsftpd.conf
    echo "anonymous_enable=NO" >> $1/vsftpd.conf
    echo "local_enable=YES" >> $1/vsftpd.conf
    echo "write_enable=YES" >> $1/vsftpd.conf
    echo "nopriv_user=vsftpd" >> $1/vsftpd.conf
    echo "virtual_use_local_privs=YES" >> $1/vsftpd.conf
    echo "guest_enable=YES" >> $1/vsftpd.conf
    echo "user_sub_token='$USER'" >> $1/vsftpd.conf
    echo "local_root=/home/vsftpd/'$USER'" >> $1/vsftpd.conf
    echo "chroot_local_user=YES" >> $1/vsftpd.conf
    echo "guest_username=vsftpd" >> $1/vsftpd.conf
    echo "allow_writeable_chroot=YES" >> $1/vsftpd.conf
    echo "rsa_cert_file=/etc/ssl/mariadb.pem" >> $1/vsftpd.conf
    echo "rsa_private_key_file=/etc/ssl/mariadb.pem" >> $1/vsftpd.conf
    echo "ssl_enable=YES" >> $1/vsftpd.conf
    echo "ssl_ciphers=HIGH" >> $1/vsftpd.conf
    echo "ssl_tlsv1=YES" >> $1/vsftpd.conf
    echo "ssl_sslv2=NO" >> $1/vsftpd.conf
    echo "ssl_sslv3=NO" >> $1/vsftpd.conf
    echo "force_local_data_ssl=YES" >> $1/vsftpd.conf
    echo "force_local_logins_ssl=YES " >> $1/vsftpd.conf
}

function checkvspam {
   if [[ -z "$(cat /etc/pam.d/vsftpd | grep "^$1")" ]]
	then
	  echo "Habilitando autenticación PAM en /etc/pam.d/vsftpd con $1..."
	  "$1 required pam_mysql.so user=vsftpd passwd=vsftpd host=localhost db=vsftpd table=accounts usercolumn=username passwdcolumn=pass crypt=2" >> /etc/pam.d/vsftpd

	else echo "La utenticación para $1 ya está activada, saltando al siguiente paso"
   fi
}

so=$(cat /etc/os-release | grep "^ID")

case $so in
   ID=fedora)
	checkdep rpm vsftpd
	checkdep rpm mariadb
	checkdep rpm mariadb-pam
	systemctl start vsftpd
        systemctl start mariadb
	vsftpdconf /etc/vsftpd
	;;

   ID=debian)
	checkdep dpkg vsftpd
	checkdep dpkg mariadb-server
	checkdep dpkg libpam-mysql
	systemctl start vsftpd
	systemctl start mariadb-server
	vsftpdconf /etc
	;;
esac

if [[ $(cat /etc/passwd | grep "^vsftpd*") ]]
   then echo "El usuario 'vsftpd' ya existe, saltando al siguiente paso"
   else
	echo "Creando al usuario 'vsftpd'..."
	useradd --home /home/vsftpd --gid nogroup -m --shell /bin/false vsftpd
fi

checkvspam auth
checkvspam account

if [[ $(test -f /etc/ssl/mariadb.pem) ]]
   then echo "El certificado para realizar una conexión segura ya existe, saltando al siguiente paso"
   else
	echo "Generando el certificado SSL 'mariadb.pem' con una clave RSA2048 y validez de 1 año..."
	openssl req -x509 -nodes -newkey rsa:2048 -keyout mariadb.pem -out mariadb.pem -days 365
fi

echo "Reiniciando el servicio 'vsftpd' para aplicar los cambios..."
systemctl restart vsftpd

read -p "¿Cómo se va a llamar el nuevo usuario? " usu
read -p "¿Cuál será su contraseña para la base de datos? " usupass

if [[ $(test -d /home/vsftpd) ]]
   then echo "El directorio '/home/vsftpd' ya existe, saltando al siguiente paso"
   else
	echo "Creando el directorio '/home/vsftpd'..."
	mkdir /home/vsftpd
fi

mkdir /home/vsftpd/$usu
chown -R vsftpd /home/vsftpd/$usu

read -p "Introduce tu contraseña 'root' para MariaDB " rootmdb

echo "Insertando a '$usu' en la tabla 'accounts' para la base de datos 'vsftpd'..."

mysql -u root -e "INSERT into vsftpd.accounts (username, pass) VALUES ('${usu}', PASSWORD('${usupass}'));"

echo "¡Usuario creado! Hemos acabado"
read
